import Head from 'next/head'
import { Row, Col } from 'react-bootstrap';
import PageLayout from '../components/PageLayout';
import AuthorIntro from '../components/AuthorIntro';
import CardItem from '../components/CardItem';
import CardListItem from '../components/CardListItem';
import { getAllBlogs } from '../../lib/api';
import FilterMenu from '../components/FilterMenu';
import { useState } from 'react';
import { useGetHello, useGetBlog } from '../../action';

export default function Home({blogs}) {

  const [filter, setFilter] = useState({
    view: { list: 0 }
    //1 ->> list
    //0 ->> box
  });
    
  // send data to api ... all are in action/index.js
  // const {data, error} = useGetHello()
  //if (data) {alert(JSON.stringify(data.name))} ---> all works correctly
  
  const {data, error} =  useGetBlog()
 
  if(data){
    // alert(JSON.stringify(data))
    console.log(data)
  }
 

  // console.log(blogs)
  return (
    <>
      <Head>
        <title>Demo sanity blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageLayout>
        <AuthorIntro />
        <FilterMenu filter={filter}
          onChange={(option,value) => {
            setFilter({
              ...filter, [option]:value
            })
          }}
        />
        <hr/>
        <Row className="mb-5">

          { blogs.length == 0 && <h2 style={{textAlign:"center"}}>No blogs to show</h2>}
          
          { blogs.map(b => 

            filter.view.list ?
              <Col md="9">
                <CardListItem key={b.id} title = {b.title} 
                          subtitle={b.subtitle}
                          author={b.author}
                          slug={b.slug}
                          date={new Date(b.date).toLocaleDateString('en-Us')}/>
              </Col>
            :
              <Col key={b.id} md="4">
                <CardItem title = {b.title} 
                          subtitle={b.subtitle}
                          coverImage={b.coverImage}
                          author={b.author}
                          slug={b.slug}
                          date={new Date(b.date).toLocaleDateString('en-Us')} />
              </Col>
            ) 
          }
         
        </Row>
      </PageLayout> 
    </>
  )
}

// this function is called during build time,  and creates static pages.
export async function getStaticProps(){
  const blogs = await getAllBlogs()
  return {
    props:{
      blogs
    }
  }
}